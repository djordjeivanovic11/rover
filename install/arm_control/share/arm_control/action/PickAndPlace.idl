// generated from rosidl_adapter/resource/action.idl.em
// with input from arm_control/action/PickAndPlace.action
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/PoseStamped.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "sensor_msgs/msg/JointState.idl"

module arm_control {
  module action {
    @verbatim (language="comment", text=
      "=============================================================================" "\n"
      "PICK AND PLACE ACTION" "\n"
      "=============================================================================" "\n"
      "Composite action for pick and place operations with grasp verification" "\n"
      "Handles approach, grasp, lift, transport, and place with error recovery" "\n"
      "=============================================================================")
    struct PickAndPlace_Goal {
      @verbatim (language="comment", text=
        "GOAL" "\n"
        "Object pickup pose")
      geometry_msgs::msg::PoseStamped pick_pose;

      @verbatim (language="comment", text=
        "Object placement pose")
      geometry_msgs::msg::PoseStamped place_pose;

      @verbatim (language="comment", text=
        "Pre-grasp approach offset [x,y,z] in meters")
      geometry_msgs::msg::Vector3 approach_offset;

      @verbatim (language="comment", text=
        "Post-grasp retreat offset [x,y,z] in meters")
      geometry_msgs::msg::Vector3 retreat_offset;

      @verbatim (language="comment", text=
        "Desired grasp force in Newtons")
      @default (value=50.0)
      float grasp_force;

      @verbatim (language="comment", text=
        "Grasp timeout in seconds")
      @default (value=5.0)
      float grasp_timeout;

      @verbatim (language="comment", text=
        "Grasp strategy: \"force\", \"position\", \"adaptive\"")
      @default (value="force")
      string grasp_strategy;

      @verbatim (language="comment", text=
        "Enable grasp verification")
      @default (value=TRUE)
      boolean verify_grasp;

      @verbatim (language="comment", text=
        "Lift height after grasp (meters)")
      @default (value=0.05)
      float lift_height;

      @verbatim (language="comment", text=
        "Force for placing object (Newtons)")
      @default (value=10.0)
      float place_force;

      @verbatim (language="comment", text=
        "Use gentle placement strategy")
      @default (value=TRUE)
      boolean gentle_place;

      @verbatim (language="comment", text=
        "Movement velocity scaling")
      @default (value=0.1)
      @unit (value="0.0-1.0")
      float velocity_scaling;

      @verbatim (language="comment", text=
        "Movement acceleration scaling")
      @default (value=0.1)
      @unit (value="0.0-1.0")
      float acceleration_scaling;
    };
    struct PickAndPlace_Result {
      @verbatim (language="comment", text=
        "RESULT" "\n"
        "True if pick and place completed")
      boolean success;

      @verbatim (language="comment", text=
        "Human-readable error description")
      string error_message;

      @verbatim (language="comment", text=
        "Structured error code")
      int32 error_code;

      @verbatim (language="comment", text=
        "Phase where failure occurred (APPROACH, GRASP, etc.)")
      string failure_phase;

      @verbatim (language="comment", text=
        "True if grasp was successful")
      boolean grasp_successful;

      @verbatim (language="comment", text=
        "True if place was successful")
      boolean place_successful;

      @verbatim (language="comment", text=
        "Actual grasp force achieved (Newtons)")
      float grasp_force_achieved;

      @verbatim (language="comment", text=
        "Final object pose (if known)")
      geometry_msgs::msg::PoseStamped final_object_pose;

      @verbatim (language="comment", text=
        "Total execution time (seconds)")
      float total_execution_time;

      @verbatim (language="comment", text=
        "Final joint configuration")
      sensor_msgs::msg::JointState final_joint_state;
    };
    struct PickAndPlace_Feedback {
      @verbatim (language="comment", text=
        "FEEDBACK" "\n"
        "Current phase (PLANNING, APPROACH, GRASP, LIFT, TRANSPORT, PLACE, RETREAT)")
      string current_phase;

      @verbatim (language="comment", text=
        "Progress within current phase")
      @unit (value="0.0-100.0")
      float phase_progress;

      @verbatim (language="comment", text=
        "Overall operation progress")
      @unit (value="0.0-100.0")
      float overall_progress;

      @verbatim (language="comment", text=
        "Current end-effector pose")
      geometry_msgs::msg::PoseStamped current_pose;

      @verbatim (language="comment", text=
        "Current grasp force (Newtons)")
      float current_grasp_force;

      @verbatim (language="comment", text=
        "True if object detected in gripper")
      boolean object_detected;

      @verbatim (language="comment", text=
        "Grasp status: \"SECURE\", \"SOFT\", \"FAILED\", \"UNKNOWN\"")
      string grasp_status;

      @verbatim (language="comment", text=
        "Human-readable status update")
      string status_message;

      @verbatim (language="comment", text=
        "Estimated time to completion (seconds)")
      float estimated_time_remaining;
    };
  };
};
